{"version":3,"sources":["components/Hat/Hat.js","components/TopElement/TopElement.js","components/BottomElement/BottomElement.js","components/WeatherElement/WeatherElement.js","buttons/NewCityButton/newCity.svg","buttons/NewCityButton/NewCityButton.js","components/SearchForm/SearchForm.js","pages/WeatherPage/WeatherPage.js","components/WeatherDay/WeatherDay.js","pages/DetailedInformation/DetailedInformation.js","index.js","App.js"],"names":["Hat","className","TopElement","location","temperature","icon","city","country","src","alt","BottomElement","humidity","windDirection","windSpeed","minTemperature","maxTemperature","degToDirection","deg","Math","round","WeatherElement","weatherData","name","main","wind","sys","weather","temp_min","temp_max","speed","toFixed","style","textDecoration","to","id","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","defaultProps","createElement","d","fill","_ref","svgRef","title","props","height","viewBox","width","ref","ForwardRef","forwardRef","NewCityButton","onClick","SearchForm","onCityAdd","useState","value","setValue","setCities","useEffect","fetch","API_KEY","then","res","json","data","placeholder","onChange","event","WeatherPage","latitude","longitude","geolocation","setGeolocation","cityList","setCityList","mainWeather","setMainWeather","visibleForm","setVisibleForm","cities","navigator","getCurrentPosition","position","coords","catch","err","console","log","list","map","elem","newCity","WeatherDay","day","description","minTemp","maxTemp","class","getDayOfWeek","str","date","Date","parse","numToDayOfWeek","getDay","0","1","2","3","4","5","6","makeFiveDays","days","index","nextDay","z","dt_txt","rest","slice","filter","element","DetailedInformation","match","setWeatherData","therrDays","setThreeDays","params","cityId","dayNames","el","ReactDOM","render","basename","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.c1cca3e7.chunk.js","sourcesContent":["import React from 'react';\n\nimport './hat.css';\n\nexport function Hat() {\n  return <div className=\"hat\">Mange cities</div>;\n}\n","import React from 'react';\n\nimport './topElement.css';\n\nexport function TopElement({ location, temperature, icon }) {\n  const { city, country } = location;\n\n  return (\n    <div className=\"top-element\">\n      <div>\n        <div className=\"region\">{city}</div>\n        <div className=\"city\">{country}</div>\n      </div>\n      <div className=\"weather\">\n        <img className=\"weather-icon\" src={`https://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"w\" />\n        <div className=\"temperature\">{temperature}&deg;</div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './bottomElement.css';\n\nexport function BottomElement({ humidity, windDirection, windSpeed, minTemperature, maxTemperature }) {\n  return (\n    <div className=\"bottom-element\">\n      <div>{`Humidity ${humidity}% | ${windDirection} | ${windSpeed} m/s`}</div>\n      <div>{`${maxTemperature} / ${minTemperature}`}&deg;C</div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { TopElement } from '../TopElement/TopElement';\nimport { BottomElement } from '../BottomElement/BottomElement';\n\nimport './weatherElement.css';\n\nconst degToDirection = (deg) => {\n  const index = Math.round(deg / 45);\n  const directions = ['South', 'Southwest', 'West', 'Northwest', 'North', 'Northeast', 'East', 'Southeast'];\n\n  return directions[index];\n};\n\nexport function WeatherElement({ weatherData }) {\n  const { name, main, wind, sys, weather } = weatherData;\n  const minTemperature = Math.round(main.temp_min);\n  const maxTemperature = Math.round(main.temp_max);\n  const temperature = Math.round((minTemperature + maxTemperature) / 2);\n  const humidity = main.humidity;\n  const windSpeed = wind.speed.toFixed(1);\n  const icon = weather[0].icon;\n  const country = sys.country;\n  const windDirection = degToDirection(wind.deg);\n\n  return (\n    <Link style={{ textDecoration: 'none' }} className=\"weather-element\" to={`details/${weatherData.id}`}>\n      <TopElement location={{ city: name, country }} temperature={temperature} icon={icon} />\n      <BottomElement\n        humidity={humidity}\n        windDirection={windDirection}\n        windSpeed={windSpeed}\n        minTemperature={minTemperature}\n        maxTemperature={maxTemperature}\n\t\t\t/>\n    </Link>\n  );\n}\n\nWeatherElement.defaultProps = {\n  weatherData: { name: '' },\n};\n\nWeatherElement.propTypes = {\n  weatherData: PropTypes.object,\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m256 0c-141.164062 0-256 114.835938-256 256s114.835938 256 256 256 256-114.835938 256-256-114.835938-256-256-256zm0 0\",\n  fill: \"#2196f3\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m368 277.332031h-90.667969v90.667969c0 11.777344-9.554687 21.332031-21.332031 21.332031s-21.332031-9.554687-21.332031-21.332031v-90.667969h-90.667969c-11.777344 0-21.332031-9.554687-21.332031-21.332031s9.554687-21.332031 21.332031-21.332031h90.667969v-90.667969c0-11.777344 9.554687-21.332031 21.332031-21.332031s21.332031 9.554687 21.332031 21.332031v90.667969h90.667969c11.777344 0 21.332031 9.554687 21.332031 21.332031s-9.554687 21.332031-21.332031 21.332031zm0 0\",\n  fill: \"#fafafa\"\n});\n\nvar SvgNewCity = function SvgNewCity(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    height: \"50px\",\n    viewBox: \"0 0 512 512\",\n    width: \"50px\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgNewCity, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/newCity.ec307a3b.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport { ReactComponent as NewCity } from './newCity.svg';\n\nimport './newCityButton.css';\n\nexport function NewCityButton({ onClick }) {\n  return (\n    <div className=\"add-button\" onClick={onClick}>\n      <NewCity />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { API_KEY } from '../../pages/WeatherPage/WeatherPage';\n\nimport './searchForm.css';\n\nexport function SearchForm({ onCityAdd }) {\n  const [value, setValue] = useState('');\n  const [city, setCities] = useState({});\n\n  useEffect(() => {\n    if (value) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${API_KEY}`)\n        .then((res) => res.json())\n        .then((data) => {\n          setCities(data);\n        });\n    }\n  }, [value]);\n\n  return (\n    <div className=\"search-form\">\n      <input placeholder=\"city\" onChange={(event) => setValue(event.target.value)} value={value} />\n      {city.name && (\n        <div className=\"search-click\" onClick={() => onCityAdd(city.id)}>\n          <div className=\"search-city\">{city.name}</div>\n          <div className=\"low-text\">click me to add</div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { Hat } from '../../components/Hat/Hat';\nimport { WeatherElement } from '../../components/WeatherElement/WeatherElement';\nimport { NewCityButton } from '../../buttons/NewCityButton/NewCityButton';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\n\nimport './weatherPage.css';\n\nexport const API_KEY = 'aae465fc2af15dcf4b7a36033aae951f';\n\nexport function WeatherPage() {\n  const [geolocation, setGeolocation] = useState({ latitude: '', longitude: '' });\n  const [cityList, setCityList] = useState([]);\n  const [mainWeather, setMainWeather] = useState({});\n  const [visibleForm, setVisibleForm] = useState(false);\n  const [cities, setCities] = useState('524901,1486209,6541934,550280,2643743');\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setGeolocation({\n        latitude: position.coords.latitude.toFixed(2),\n        longitude: position.coords.longitude.toFixed(2),\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    if (geolocation.latitude) {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${geolocation.latitude}&lon=${geolocation.longitude}&units=metric&appid=${API_KEY}`,\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setMainWeather(data);\n        })\n        .catch((err) => console.log(err));\n    }\n\n    fetch(`https://api.openweathermap.org/data/2.5/group?id=${cities}&units=metric&appid=${API_KEY}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setCityList(data.list);\n      });\n  }, [geolocation, cities]);\n\n  return (\n    <>\n      <div className=\"weather-page\">\n        <Hat />\n        {mainWeather.name && <WeatherElement weatherData={mainWeather} />}\n        {cityList.map((elem) => (\n          <WeatherElement weatherData={elem} />\n        ))}\n        {visibleForm ? (\n          <SearchForm\n            onCityAdd={(newCity) => {\n              setCities(cities + `,${newCity}`);\n              setVisibleForm(!visibleForm);\n            }}\n          />\n        ) : (\n          <NewCityButton\n            onClick={() => {\n              setVisibleForm(!visibleForm);\n            }}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport './weatherDay.css';\n\nexport function WeatherDay({ day, description, minTemp, maxTemp, icon }) {\n  console.log(icon, 'img');\n  return (\n    <div className=\"weather-day\">\n      <div class=\"left-block\">\n        <img className=\"weather-icon\" src={`https://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\" />\n        <div>{`${day}  ${description}`}</div>\n      </div>\n      <div>{`${minTemp} / ${maxTemp}`}</div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { WeatherDay } from '../../components/WeatherDay/WeatherDay';\n\nimport './detailedInformation.css';\n\nimport { API_KEY } from '../WeatherPage/WeatherPage';\n\nconst getDayOfWeek = (str) => {\n  const date = new Date(Date.parse(str));\n  return numToDayOfWeek[date.getDay()];\n};\n\nconst numToDayOfWeek = {\n  0: 'Sun',\n  1: 'Mon',\n  2: 'Tues',\n  3: 'Wed',\n  4: 'Thrs',\n  5: 'Fri',\n  6: 'Sat',\n};\n\nconst makeFiveDays = (list) => {\n  let days = [list[0]];\n  let index = 1;\n  const nextDay = (new Date().getDay() + 1) % 7;\n  let z = 0;\n  while (nextDay !== new Date(Date.parse(list[index].dt_txt)).getDay()) {\n    index += 1;\n    z++;\n    if (z >= 20) {\n      break;\n    }\n  }\n  console.log(index);\n  const rest = list.slice(index).filter((element) => element.dt_txt.slice(11, 13) === '15');\n  days = [...days, ...rest];\n  return days;\n};\n\nexport function DetailedInformation({ match }) {\n  const [weatherData, setWeatherData] = useState({});\n  const [therrDays, setThreeDays] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?id=${match.params.cityId}&units=metric&appid=${API_KEY}`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        const list = makeFiveDays(data.list);\n        data.list = list;\n        setWeatherData(data);\n\n        const dayNames = ['Today', 'Tomorrow', getDayOfWeek(data.list[2].dt_txt)];\n\n        setThreeDays(\n          data.list.slice(0, 3).map((el, index) => {\n            return {\n              description: el.weather[0].description,\n              minTemp: Math.round(el.main.temp_min),\n              maxTemp: Math.round(el.main.temp_max),\n              day: dayNames[index],\n              icon: el.weather[0].icon,\n            };\n          }),\n        );\n      })\n      .catch((err) => console.log(err));\n  }, [match.params.cityId]);\n\n  const city = weatherData.city ? weatherData.city.name : '';\n  const { main, weather } = weatherData.list ? weatherData.list[0] : false;\n  const minTemperature = main ? Math.round(main.temp_min) : 0;\n  const maxTemperature = main ? Math.round(main.temp_max) : 0;\n  const temperature = Math.round((minTemperature + maxTemperature) / 2);\n  const description = main ? weather[0].description : '';\n\n  return (\n    <div className=\"detail-page\">\n      <div className=\"title\">{city}</div>\n      <div className=\"detail-weather\">\n        <div className=\"temperature\">\n          {temperature}\n          <div className=\"celsius\">&deg;C</div>\n        </div>\n        <div className=\"description\">{description}</div>\n      </div>\n      <div className=\"three-days\">\n        {therrDays.map(({ day, description, minTemp, maxTemp, icon }) => (\n          <WeatherDay day={day} description={description} minTemp={minTemp} maxTemp={maxTemp} icon={icon} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { WeatherPage } from './pages/WeatherPage/WeatherPage';\nimport { DetailedInformation } from './pages/DetailedInformation/DetailedInformation';\n\nimport './app.css';\n\nexport function App() {\n  return (\n    <div className=\"main-container\">\n      <Router basename=\"/2019-2-Atom-Frontend-A-Gordeev\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <WeatherPage />\n          </Route>\n          <Route path=\"/details/:cityId\" render={(props) => <DetailedInformation {...props} />}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n"],"sourceRoot":""}